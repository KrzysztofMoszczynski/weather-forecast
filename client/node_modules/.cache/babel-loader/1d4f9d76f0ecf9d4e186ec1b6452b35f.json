{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\components\\\\statistical-display.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TemperatureBox from \"../components/temperature-box\";\nimport SmallBox from \"../components/small-box\";\nconst useStyles = makeStyles({\n  cityText: {\n    fontSize: 20,\n    textAlign: \"center\"\n  },\n  smallBox: {\n    marginBottom: 50\n  },\n  containerLeft: {\n    marginRight: 50\n  },\n  containerRight: {\n    marginLeft: 50\n  }\n});\n\nconst StatisticalDisplay = ({\n  cityData,\n  statisticalData\n}) => {\n  const classes = useStyles();\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cityText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, cityData.name, \", \", cityData.country), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Statistical data for \", months[statisticalData.month - 1], \",\", \" \", statisticalData.day)), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    xs: true,\n    className: classes.containerLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.smallBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SmallBox, {\n    label: \"Average Pressure\",\n    value: parseInt(statisticalData.avgPressure),\n    units: \"hPa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SmallBox, {\n    label: \"label\",\n    value: \"100\",\n    units: \"W\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TemperatureBox, {\n    average: \"10\",\n    max: \"13\",\n    min: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    xs: true,\n    className: classes.containerRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.smallBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SmallBox, {\n    label: \"label\",\n    value: \"100\",\n    units: \"W\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SmallBox, {\n    label: \"label\",\n    value: \"100\",\n    units: \"W\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default StatisticalDisplay;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/components/statistical-display.jsx"],"names":["React","useState","useEffect","makeStyles","Grid","TemperatureBox","SmallBox","useStyles","cityText","fontSize","textAlign","smallBox","marginBottom","containerLeft","marginRight","containerRight","marginLeft","StatisticalDisplay","cityData","statisticalData","classes","months","name","country","month","day","parseInt","avgPressure"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TemperatureBox from \"../components/temperature-box\";\r\nimport SmallBox from \"../components/small-box\";\r\n\r\nconst useStyles = makeStyles({\r\n  cityText: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  smallBox: {\r\n    marginBottom: 50,\r\n  },\r\n  containerLeft: {\r\n    marginRight: 50,\r\n  },\r\n  containerRight: {\r\n    marginLeft: 50,\r\n  },\r\n});\r\n\r\nconst StatisticalDisplay = ({ cityData, statisticalData }) => {\r\n  const classes = useStyles();\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.cityText}>\r\n        <p>\r\n          {cityData.name}, {cityData.country}\r\n        </p>\r\n        <p>\r\n          Statistical data for {months[statisticalData.month - 1]},{\" \"}\r\n          {statisticalData.day}\r\n        </p>\r\n      </div>\r\n      <Grid container direction='row' spacing={10}>\r\n        <Grid\r\n          item\r\n          container\r\n          direction='column'\r\n          xs\r\n          className={classes.containerLeft}\r\n        >\r\n          <Grid item className={classes.smallBox}>\r\n            <SmallBox\r\n              label='Average Pressure'\r\n              value={parseInt(statisticalData.avgPressure)}\r\n              units='hPa'\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <SmallBox label='label' value='100' units='W' />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <TemperatureBox average='10' max='13' min='8' />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          direction='column'\r\n          xs\r\n          className={classes.containerRight}\r\n        >\r\n          <Grid item className={classes.smallBox}>\r\n            <SmallBox label='label' value='100' units='W' />\r\n          </Grid>\r\n          <Grid item>\r\n            <SmallBox label='label' value='100' units='W' />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatisticalDisplay;\r\n"]},"metadata":{},"sourceType":"module"}