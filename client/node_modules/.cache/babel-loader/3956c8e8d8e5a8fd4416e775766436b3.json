{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\pages\\\\home.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport logoBig from \"../assets/images/logo.png\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CityFinder from \"../components/city-finder\";\nimport database from \"../api/openWeatherMap\";\nconst useStyles = makeStyles({\n  pageStyle: {\n    textAlign: \"center\",\n    marginTop: \"30px\"\n  },\n  logo: {\n    width: \"20%\",\n    height: \"20%\",\n    marginLeft: 75\n  },\n  typeCityText: {\n    marginBottom: 30\n  },\n  noCityMessage: {\n    color: \"#FF0000\",\n    fontSize: 15\n  },\n  infoIcon: {\n    fontSize: 40,\n    paddingRight: 30,\n    float: \"right\",\n    cursor: \"pointer\"\n  },\n  linkButton: {\n    backgroundColor: \"#C4C4C4\",\n    borderRadius: 13,\n    textAlign: \"center\",\n    marginTop: 30,\n    fontWeight: 600\n  }\n});\n\nfunction Home({\n  setWeatherData,\n  setCityData,\n  dataLoaded,\n  setDataLoaded\n}) {\n  const classes = useStyles();\n  const [cityNotFound, setCityNotFound] = useState(false);\n  const [cityName, setCityName] = useState(\"\");\n  let history = useHistory();\n\n  function handleSearch(cityName) {\n    setCityName(cityName);\n    fetchWeather(cityName);\n  }\n\n  function handleInfoClick() {\n    history.push(\"/about\");\n  }\n\n  async function fetchWeather(choosenCityName) {\n    const weather = await database.getWeatherByCityName(choosenCityName);\n\n    if (weather == false) {\n      setCityNotFound(true);\n    } else {\n      setCityData(weather[0]);\n      setWeatherData(weather[1]);\n      setCityNotFound(false);\n    }\n  }\n\n  useEffect(() => {\n    if (dataLoaded) {\n      history.push(\"./mainweather\");\n      setDataLoaded(false);\n    }\n  }, [dataLoaded]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.pageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoBig,\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoIcon, {\n    className: classes.infoIcon,\n    onClick: handleInfoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.typeCityText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Type the city you want to check the weather for:\"), /*#__PURE__*/React.createElement(CityFinder, {\n    handleSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/statistical\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.linkButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Check statistical data \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 34\n    }\n  }), \" for choosen city\")), cityNotFound && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noCityMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Ooops... it seems like we don't have your city in database.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Try another city or check if there is no typo.\")));\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/pages/home.jsx"],"names":["React","useState","useEffect","Link","useHistory","makeStyles","Typography","Button","logoBig","InfoIcon","CityFinder","database","useStyles","pageStyle","textAlign","marginTop","logo","width","height","marginLeft","typeCityText","marginBottom","noCityMessage","color","fontSize","infoIcon","paddingRight","float","cursor","linkButton","backgroundColor","borderRadius","fontWeight","Home","setWeatherData","setCityData","dataLoaded","setDataLoaded","classes","cityNotFound","setCityNotFound","cityName","setCityName","history","handleSearch","fetchWeather","handleInfoClick","push","choosenCityName","weather","getWeatherByCityName","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport logoBig from \"../assets/images/logo.png\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CityFinder from \"../components/city-finder\";\r\nimport database from \"../api/openWeatherMap\";\r\n\r\nconst useStyles = makeStyles({\r\n  pageStyle: {\r\n    textAlign: \"center\",\r\n    marginTop: \"30px\",\r\n  },\r\n  logo: {\r\n    width: \"20%\",\r\n    height: \"20%\",\r\n    marginLeft: 75,\r\n  },\r\n  typeCityText: {\r\n    marginBottom: 30,\r\n  },\r\n  noCityMessage: {\r\n    color: \"#FF0000\",\r\n    fontSize: 15,\r\n  },\r\n  infoIcon: {\r\n    fontSize: 40,\r\n    paddingRight: 30,\r\n    float: \"right\",\r\n    cursor: \"pointer\",\r\n  },\r\n  linkButton: {\r\n    backgroundColor: \"#C4C4C4\",\r\n    borderRadius: 13,\r\n    textAlign: \"center\",\r\n    marginTop: 30,\r\n    fontWeight: 600,\r\n  },\r\n});\r\n\r\nfunction Home({ setWeatherData, setCityData, dataLoaded, setDataLoaded }) {\r\n  const classes = useStyles();\r\n  const [cityNotFound, setCityNotFound] = useState(false);\r\n  const [cityName, setCityName] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  function handleSearch(cityName) {\r\n    setCityName(cityName);\r\n    fetchWeather(cityName);\r\n  }\r\n\r\n  function handleInfoClick() {\r\n    history.push(\"/about\");\r\n  }\r\n\r\n  async function fetchWeather(choosenCityName) {\r\n    const weather = await database.getWeatherByCityName(choosenCityName);\r\n    if (weather == false) {\r\n      setCityNotFound(true);\r\n    } else {\r\n      setCityData(weather[0]);\r\n      setWeatherData(weather[1]);\r\n      setCityNotFound(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dataLoaded) {\r\n      history.push(\"./mainweather\");\r\n      setDataLoaded(false);\r\n    }\r\n  }, [dataLoaded]);\r\n\r\n  return (\r\n    <div className={classes.pageStyle}>\r\n      <img src={logoBig} className={classes.logo} />\r\n      <InfoIcon className={classes.infoIcon} onClick={handleInfoClick} />\r\n      <Typography variant='h5' className={classes.typeCityText}>\r\n        Type the city you want to check the weather for:\r\n      </Typography>\r\n      <CityFinder handleSearch={handleSearch} />\r\n\r\n      <Link to='/statistical' style={{ textDecoration: \"none\" }}>\r\n        <Button className={classes.linkButton}>\r\n          Check statistical data <br /> for choosen city\r\n        </Button>\r\n      </Link>\r\n      {cityNotFound && (\r\n        <div className={classes.noCityMessage}>\r\n          <p>Ooops... it seems like we don't have your city in database.</p>\r\n          <p>Try another city or check if there is no typo.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}