{"ast":null,"code":"import axios from \"axios\";\nconst apiKey = \"f14f6a8afb9f48fa4104b86989623adf\";\nconst database = {\n  async getWeatherByCityName(city) {\n    const createWeatherList = (dateTime, temperature, icon, pressure, humidity, wind) => ({\n      dateTime,\n      temperature,\n      icon,\n      pressure,\n      humidity,\n      wind\n    });\n\n    const createCityData = (cityName, countryCode) => ({\n      cityName,\n      countryCode\n    });\n\n    const weatherList = [];\n    var cityData = {};\n\n    try {\n      const response = await axios.get(\"https://api.openweathermap.org/data/2.5/forecast\", {\n        params: {\n          q: city,\n          appid: apiKey\n        }\n      });\n      cityData = {\n        cityName: response.data.city.name,\n        countryCode: response.data.city.country\n      };\n      console.log(response);\n      weatherList.push(...response.data.list.map(listElement => createWeatherList(listElement.dt_txt, listElement.main.temp, listElement.weather[0].description, listElement.main.pressure, listElement.main.humidity, listElement.wind))); //console.log(weatherList);\n\n      return [cityData, weatherList];\n    } catch (error) {\n      console.log(error);\n      return false;\n    } //const weatherArray = await api.openweathermap.org/data/2.5/forecast?q={Warsaw}&appid={apiKey};\n\n  }\n\n};\nexport default database;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/api/openWeatherMap.js"],"names":["axios","apiKey","database","getWeatherByCityName","city","createWeatherList","dateTime","temperature","icon","pressure","humidity","wind","createCityData","cityName","countryCode","weatherList","cityData","response","get","params","q","appid","data","name","country","console","log","push","list","map","listElement","dt_txt","main","temp","weather","description","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AAEA,MAAMC,QAAQ,GAAG;AACf,QAAMC,oBAAN,CAA2BC,IAA3B,EAAiC;AAC/B,UAAMC,iBAAiB,GAAG,CACxBC,QADwB,EAExBC,WAFwB,EAGxBC,IAHwB,EAIxBC,QAJwB,EAKxBC,QALwB,EAMxBC,IANwB,MAOpB;AAAEL,MAAAA,QAAF;AAAYC,MAAAA,WAAZ;AAAyBC,MAAAA,IAAzB;AAA+BC,MAAAA,QAA/B;AAAyCC,MAAAA,QAAzC;AAAmDC,MAAAA;AAAnD,KAPoB,CAA1B;;AASA,UAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,WAAX,MAA4B;AACjDD,MAAAA,QADiD;AAEjDC,MAAAA;AAFiD,KAA5B,CAAvB;;AAKA,UAAMC,WAAW,GAAG,EAApB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACrB,kDADqB,EAErB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,CAAC,EAAEhB,IAAL;AAAWiB,UAAAA,KAAK,EAAEpB;AAAlB;AAAV,OAFqB,CAAvB;AAKAe,MAAAA,QAAQ,GAAG;AACTH,QAAAA,QAAQ,EAAEI,QAAQ,CAACK,IAAT,CAAclB,IAAd,CAAmBmB,IADpB;AAETT,QAAAA,WAAW,EAAEG,QAAQ,CAACK,IAAT,CAAclB,IAAd,CAAmBoB;AAFvB,OAAX;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAF,MAAAA,WAAW,CAACY,IAAZ,CACE,GAAGV,QAAQ,CAACK,IAAT,CAAcM,IAAd,CAAmBC,GAAnB,CAAuBC,WAAW,IACnCzB,iBAAiB,CACfyB,WAAW,CAACC,MADG,EAEfD,WAAW,CAACE,IAAZ,CAAiBC,IAFF,EAGfH,WAAW,CAACI,OAAZ,CAAoB,CAApB,EAAuBC,WAHR,EAIfL,WAAW,CAACE,IAAZ,CAAiBvB,QAJF,EAKfqB,WAAW,CAACE,IAAZ,CAAiBtB,QALF,EAMfoB,WAAW,CAACnB,IANG,CADhB,CADL,EAXE,CAuBF;;AACA,aAAO,CAACK,QAAD,EAAWD,WAAX,CAAP;AACD,KAzBD,CAyBE,OAAOqB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,aAAO,KAAP;AACD,KA7C8B,CA8C/B;;AACD;;AAhDc,CAAjB;AAmDA,eAAelC,QAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiKey = \"f14f6a8afb9f48fa4104b86989623adf\";\r\n\r\nconst database = {\r\n  async getWeatherByCityName(city) {\r\n    const createWeatherList = (\r\n      dateTime,\r\n      temperature,\r\n      icon,\r\n      pressure,\r\n      humidity,\r\n      wind\r\n    ) => ({ dateTime, temperature, icon, pressure, humidity, wind });\r\n\r\n    const createCityData = (cityName, countryCode) => ({\r\n      cityName,\r\n      countryCode,\r\n    });\r\n\r\n    const weatherList = [];\r\n    var cityData = {};\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.openweathermap.org/data/2.5/forecast\",\r\n        { params: { q: city, appid: apiKey } }\r\n      );\r\n\r\n      cityData = {\r\n        cityName: response.data.city.name,\r\n        countryCode: response.data.city.country,\r\n      };\r\n      console.log(response);\r\n      weatherList.push(\r\n        ...response.data.list.map(listElement =>\r\n          createWeatherList(\r\n            listElement.dt_txt,\r\n            listElement.main.temp,\r\n            listElement.weather[0].description,\r\n            listElement.main.pressure,\r\n            listElement.main.humidity,\r\n            listElement.wind\r\n          )\r\n        )\r\n      );\r\n      //console.log(weatherList);\r\n      return [cityData, weatherList];\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n    //const weatherArray = await api.openweathermap.org/data/2.5/forecast?q={Warsaw}&appid={apiKey};\r\n  },\r\n};\r\n\r\nexport default database;\r\n"]},"metadata":{},"sourceType":"module"}