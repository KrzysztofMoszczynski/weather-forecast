{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\components\\\\statistical-search.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nconst useStyles = makeStyles({\n  cityWindow: {\n    margin: \"auto\",\n    padding: 10,\n    paddingLeft: 30,\n    height: 30,\n    width: 200,\n    borderRadius: 8,\n    backgroundColor: \"white\",\n    display: \"flex\",\n    border: \"2px solid #141414\"\n  },\n  formControl: {\n    width: 150\n  },\n  select: {\n    backgroundColor: \"white\",\n    borderRadius: 8,\n    border: \"2px solid #141414\"\n  }\n});\n\nfunction StatisticalSearch() {\n  const classes = useStyles();\n  const [month, setMonth] = useState(0);\n  const [day, setDay] = useState(0);\n  const [dayList, setDayList] = useState([]);\n  const [dayDisabled, setDayDisabled] = useState(true);\n  const [searchDisabled, setSearchDisabled] = useState(true);\n  const [city, setCity] = useState(\"\");\n\n  const handleChange = e => setCity(e.target.value);\n\n  const handleMonthChange = event => {\n    setMonth(event.target.value);\n    setDay(0);\n    let dayListTemp = [];\n    let numberOfDays = 0;\n\n    if ([1, 3, 5, 7, 8, 10, 12].includes(event.target.value)) {\n      numberOfDays = 31;\n    } else if (event.target.value == 2) {\n      numberOfDays = 29;\n    } else {\n      numberOfDays = 30;\n    }\n\n    for (let i = 0; i < numberOfDays; i++) {\n      dayListTemp.push(i + 1);\n    }\n\n    setDayList(dayListTemp);\n    console.log(dayListTemp);\n  };\n\n  const handleDayChange = event => {\n    setDay(event.target.value);\n  };\n\n  function handleSearchButtonClick() {\n    setCity(\"\");\n    console.log(city); //props.handleSearch(value);\n  }\n\n  useEffect(() => {\n    if (dayList.length > 0) {\n      setDayDisabled(false);\n    }\n  }, [dayList]);\n  useEffect(() => {\n    if (city != \"\" && month != 0 & day != 0) {\n      setSearchDisabled(false);\n    } else {\n      setSearchDisabled(true);\n    }\n  }, [city, month, day]);\n  console.log(day);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cityWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    placeholder: \"Search city\",\n    value: city,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"month-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Month\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"month-label\",\n    value: month,\n    onChange: handleMonthChange,\n    label: \"Month\",\n    className: classes.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"January\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"February\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, \"March\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"April\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"May\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"June\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"July\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"August\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"September\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"October\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, \"November\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"December\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    variant: \"outlined\",\n    disabled: dayDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"day-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Day\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"day-label\",\n    value: day,\n    onChange: handleDayChange,\n    label: \"Day\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, dayList.length > 0 && dayList.map(day => /*#__PURE__*/React.createElement(MenuItem, {\n    value: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 36\n    }\n  }, day))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSearchButtonClick,\n    disabled: searchDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default StatisticalSearch;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/components/statistical-search.jsx"],"names":["React","useState","useEffect","makeStyles","Grid","Select","FormControl","InputLabel","InputBase","MenuItem","Button","SearchIcon","useStyles","cityWindow","margin","padding","paddingLeft","height","width","borderRadius","backgroundColor","display","border","formControl","select","StatisticalSearch","classes","month","setMonth","day","setDay","dayList","setDayList","dayDisabled","setDayDisabled","searchDisabled","setSearchDisabled","city","setCity","handleChange","e","target","value","handleMonthChange","event","dayListTemp","numberOfDays","includes","i","push","console","log","handleDayChange","handleSearchButtonClick","length","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles({\r\n  cityWindow: {\r\n    margin: \"auto\",\r\n    padding: 10,\r\n    paddingLeft: 30,\r\n    height: 30,\r\n    width: 200,\r\n    borderRadius: 8,\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    border: \"2px solid #141414\",\r\n  },\r\n  formControl: {\r\n    width: 150,\r\n  },\r\n  select: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 8,\r\n    border: \"2px solid #141414\",\r\n  },\r\n});\r\n\r\nfunction StatisticalSearch() {\r\n  const classes = useStyles();\r\n  const [month, setMonth] = useState(0);\r\n  const [day, setDay] = useState(0);\r\n  const [dayList, setDayList] = useState([]);\r\n  const [dayDisabled, setDayDisabled] = useState(true);\r\n  const [searchDisabled, setSearchDisabled] = useState(true);\r\n  const [city, setCity] = useState(\"\");\r\n  const handleChange = e => setCity(e.target.value);\r\n\r\n  const handleMonthChange = event => {\r\n    setMonth(event.target.value);\r\n    setDay(0);\r\n    let dayListTemp = [];\r\n    let numberOfDays = 0;\r\n    if ([1, 3, 5, 7, 8, 10, 12].includes(event.target.value)) {\r\n      numberOfDays = 31;\r\n    } else if (event.target.value == 2) {\r\n      numberOfDays = 29;\r\n    } else {\r\n      numberOfDays = 30;\r\n    }\r\n    for (let i = 0; i < numberOfDays; i++) {\r\n      dayListTemp.push(i + 1);\r\n    }\r\n    setDayList(dayListTemp);\r\n    console.log(dayListTemp);\r\n  };\r\n\r\n  const handleDayChange = event => {\r\n    setDay(event.target.value);\r\n  };\r\n\r\n  function handleSearchButtonClick() {\r\n    setCity(\"\");\r\n    console.log(city);\r\n    //props.handleSearch(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (dayList.length > 0) {\r\n      setDayDisabled(false);\r\n    }\r\n  }, [dayList]);\r\n\r\n  useEffect(() => {\r\n    if (city != \"\" && (month != 0) & (day != 0)) {\r\n      setSearchDisabled(false);\r\n    } else {\r\n      setSearchDisabled(true);\r\n    }\r\n  }, [city, month, day]);\r\n\r\n  console.log(day);\r\n  return (\r\n    <div>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs>\r\n          <div className={classes.cityWindow}>\r\n            <InputBase\r\n              placeholder='Search city'\r\n              value={city}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <FormControl variant='outlined' className={classes.formControl}>\r\n            <InputLabel id='month-label'>Month</InputLabel>\r\n            <Select\r\n              labelId='month-label'\r\n              value={month}\r\n              onChange={handleMonthChange}\r\n              label='Month'\r\n              className={classes.select}\r\n            >\r\n              <MenuItem value={1}>January</MenuItem>\r\n              <MenuItem value={2}>February</MenuItem>\r\n              <MenuItem value={3}>March</MenuItem>\r\n              <MenuItem value={4}>April</MenuItem>\r\n              <MenuItem value={5}>May</MenuItem>\r\n              <MenuItem value={6}>June</MenuItem>\r\n              <MenuItem value={7}>July</MenuItem>\r\n              <MenuItem value={8}>August</MenuItem>\r\n              <MenuItem value={9}>September</MenuItem>\r\n              <MenuItem value={10}>October</MenuItem>\r\n              <MenuItem value={11}>November</MenuItem>\r\n              <MenuItem value={12}>December</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <FormControl\r\n            className={classes.formControl}\r\n            variant='outlined'\r\n            disabled={dayDisabled}\r\n          >\r\n            <InputLabel id='day-label'>Day</InputLabel>\r\n            <Select\r\n              labelId='day-label'\r\n              value={day}\r\n              onChange={handleDayChange}\r\n              label='Day'\r\n            >\r\n              {dayList.length > 0 &&\r\n                dayList.map(day => <MenuItem value={day}>{day}</MenuItem>)}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button onClick={handleSearchButtonClick} disabled={searchDisabled}>\r\n            <SearchIcon />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatisticalSearch;\r\n"]},"metadata":{},"sourceType":"module"}