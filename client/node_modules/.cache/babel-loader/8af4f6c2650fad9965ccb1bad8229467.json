{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\Github\\\\weather-forecast\\\\src\\\\pages\\\\mainweather.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Clock from \"../components/clock\";\nimport logoBig from \"../assets/images/logo.png\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DayWindow from \"../components/day-window\";\nconst useStyles = makeStyles(theme => ({\n  contentContainer: {\n    margin: 30,\n    marginTop: 10\n  },\n  topBar: {\n    //margin: \"auto\",\n    display: \"flex\"\n  },\n  logoTop: {},\n  cityDisplay: {\n    textAlign: \"center\",\n    fontWeight: \"bold\"\n  }\n}));\nconst logo = {\n  src: logoBig,\n  alt: \"logo\",\n  width: \"80%\",\n  height: \"90%\"\n};\n\nfunction MainWeather() {\n  const classes = useStyles();\n  const [dayWindows, setDayWindows] = useState(null);\n  const [weatherArray, setWeatherArray] = useState(null);\n\n  function fetch() {\n    const dayWindowsArray = [0, 1, 2, 3, 4];\n    setDayWindows(dayWindowsArray);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.topBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"row\",\n    justify: \"space-around\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo.src,\n    alt: logo.alt,\n    width: logo.width,\n    height: logo.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.cityDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Weather for: \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 28\n    }\n  }), \" Lodz\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })))), dayWindows && dayWindows.map(dayWindow => /*#__PURE__*/React.createElement(DayWindow, {\n    key: dayWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 50\n    }\n  })));\n}\n\nexport default MainWeather;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/Github/weather-forecast/src/pages/mainweather.jsx"],"names":["React","useState","useEffect","makeStyles","Clock","logoBig","Typography","Grid","DayWindow","useStyles","theme","contentContainer","margin","marginTop","topBar","display","logoTop","cityDisplay","textAlign","fontWeight","logo","src","alt","width","height","MainWeather","classes","dayWindows","setDayWindows","weatherArray","setWeatherArray","fetch","dayWindowsArray","map","dayWindow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Clock from \"../components/clock\";\r\nimport logoBig from \"../assets/images/logo.png\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DayWindow from \"../components/day-window\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  contentContainer: {\r\n    margin: 30,\r\n    marginTop: 10,\r\n  },\r\n  topBar: {\r\n    //margin: \"auto\",\r\n    display: \"flex\",\r\n  },\r\n  logoTop: {},\r\n  cityDisplay: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst logo = {\r\n  src: logoBig,\r\n  alt: \"logo\",\r\n  width: \"80%\",\r\n  height: \"90%\",\r\n};\r\n\r\nfunction MainWeather() {\r\n  const classes = useStyles();\r\n  const [dayWindows, setDayWindows] = useState(null);\r\n  const [weatherArray, setWeatherArray] = useState(null);\r\n\r\n  function fetch() {\r\n    const dayWindowsArray = [0, 1, 2, 3, 4];\r\n    setDayWindows(dayWindowsArray);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.contentContainer}>\r\n      <div className={classes.topBar}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          direction='row'\r\n          justify={\"space-around\"}\r\n          alignItems={\"center\"}\r\n        >\r\n          <Grid item>\r\n            <img\r\n              src={logo.src}\r\n              alt={logo.alt}\r\n              width={logo.width}\r\n              height={logo.height}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant='h5' className={classes.cityDisplay}>\r\n              Weather for: <br /> Lodz\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Clock />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      {dayWindows && dayWindows.map(dayWindow => <DayWindow key={dayWindow} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainWeather;\r\n"]},"metadata":{},"sourceType":"module"}