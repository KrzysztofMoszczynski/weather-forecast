{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\components\\\\day-window.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SunIcon from \"../assets/images/sun.png\";\nimport CloudIcon from \"../assets/images/cloud.png\";\nimport RainIcon from \"../assets/images/rain.png\";\nimport HailIcon from \"../assets/images/hail.png\";\nimport StormIcon from \"../assets/images/storm.png\";\nimport HeavyRainIcon from \"../assets/images/heavy-rain.png\";\nimport CloudsAndSunIcon from \"../assets/images/clouds-and-sun.png\";\nimport FogIcon from \"../assets/images/fog.png\";\nimport SnowIcon from \"../assets/images/snow.png\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nconst useStyles = makeStyles({\n  smallContainer: {\n    backgroundColor: \"#273DFF\",\n    color: \"#EFEFEF\",\n    padding: 10,\n    margin: 20,\n    marginLeft: 100,\n    marginRight: 100,\n    borderRadius: 10,\n    \"& p\": {\n      margin: 1\n    }\n  },\n  avgIcon: {\n    width: 80,\n    height: 80\n  },\n  minMaxTemp: {\n    textAlign: \"right\",\n    fontSize: 30\n  },\n  minTemp: {\n    opacity: \"50%\"\n  },\n  avgPressureHumidity: {\n    textAlign: \"center\",\n    fontSize: 23\n  },\n  avgPressureHumidityValue: {\n    fontSize: 28\n  },\n  dateUnderDay: {\n    fontSize: 20\n  },\n  expandButton: {\n    textAlign: \"center\",\n    marginRight: 40\n  },\n  expandIcon: {\n    fontSize: 45,\n    colod: \"white\"\n  }\n});\n\nfunction DayWindow() {\n  const classes = useStyles();\n  const [avgIcon, setAvgIcon] = useState(null);\n  const [minTemp, setMinTemp] = useState(\"\");\n  const [maxTemp, setMaxTemp] = useState(\"\");\n  const [avgPressure, setAvgPressure] = useState(\"\");\n  const [avgHumidity, setAvgHumidity] = useState(\"\");\n\n  async function fetch() {\n    setAvgIcon(CloudIcon);\n    setMinTemp(3 + \"°\");\n    setMaxTemp(12 + \"°\");\n    setAvgPressure(1030 + \"hPa\");\n    setAvgHumidity(60 + \"%\");\n  }\n\n  useEffect(() => {\n    fetch();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.smallContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avgIcon,\n    className: classes.avgIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    className: classes.minMaxTemp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, maxTemp), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.minTemp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, minTemp)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    className: classes.avgPressureHumidity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Pressure:\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.avgPressureHumidityValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, avgPressure)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.avgPressureHumidity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Humidity:\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.avgPressureHumidityValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, avgHumidity)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    className: classes.minMaxTemp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Friday\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.dateUnderDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"06 November\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.expandButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n    className: classes.expandIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default DayWindow;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/components/day-window.jsx"],"names":["React","useState","useEffect","Grid","IconButton","makeStyles","SunIcon","CloudIcon","RainIcon","HailIcon","StormIcon","HeavyRainIcon","CloudsAndSunIcon","FogIcon","SnowIcon","ExpandMoreIcon","useStyles","smallContainer","backgroundColor","color","padding","margin","marginLeft","marginRight","borderRadius","avgIcon","width","height","minMaxTemp","textAlign","fontSize","minTemp","opacity","avgPressureHumidity","avgPressureHumidityValue","dateUnderDay","expandButton","expandIcon","colod","DayWindow","classes","setAvgIcon","setMinTemp","maxTemp","setMaxTemp","avgPressure","setAvgPressure","avgHumidity","setAvgHumidity","fetch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport SunIcon from \"../assets/images/sun.png\";\r\nimport CloudIcon from \"../assets/images/cloud.png\";\r\nimport RainIcon from \"../assets/images/rain.png\";\r\nimport HailIcon from \"../assets/images/hail.png\";\r\nimport StormIcon from \"../assets/images/storm.png\";\r\nimport HeavyRainIcon from \"../assets/images/heavy-rain.png\";\r\nimport CloudsAndSunIcon from \"../assets/images/clouds-and-sun.png\";\r\nimport FogIcon from \"../assets/images/fog.png\";\r\nimport SnowIcon from \"../assets/images/snow.png\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst useStyles = makeStyles({\r\n  smallContainer: {\r\n    backgroundColor: \"#273DFF\",\r\n    color: \"#EFEFEF\",\r\n    padding: 10,\r\n    margin: 20,\r\n    marginLeft: 100,\r\n    marginRight: 100,\r\n    borderRadius: 10,\r\n    \"& p\": {\r\n      margin: 1,\r\n    },\r\n  },\r\n  avgIcon: {\r\n    width: 80,\r\n    height: 80,\r\n  },\r\n  minMaxTemp: {\r\n    textAlign: \"right\",\r\n    fontSize: 30,\r\n  },\r\n  minTemp: {\r\n    opacity: \"50%\",\r\n  },\r\n  avgPressureHumidity: {\r\n    textAlign: \"center\",\r\n    fontSize: 23,\r\n  },\r\n  avgPressureHumidityValue: {\r\n    fontSize: 28,\r\n  },\r\n  dateUnderDay: {\r\n    fontSize: 20,\r\n  },\r\n  expandButton: {\r\n    textAlign: \"center\",\r\n    marginRight: 40,\r\n  },\r\n  expandIcon: {\r\n    fontSize: 45,\r\n    colod: \"white\",\r\n  },\r\n});\r\n\r\nfunction DayWindow() {\r\n  const classes = useStyles();\r\n  const [avgIcon, setAvgIcon] = useState(null);\r\n  const [minTemp, setMinTemp] = useState(\"\");\r\n  const [maxTemp, setMaxTemp] = useState(\"\");\r\n  const [avgPressure, setAvgPressure] = useState(\"\");\r\n  const [avgHumidity, setAvgHumidity] = useState(\"\");\r\n\r\n  async function fetch() {\r\n    setAvgIcon(CloudIcon);\r\n    setMinTemp(3 + \"°\");\r\n    setMaxTemp(12 + \"°\");\r\n    setAvgPressure(1030 + \"hPa\");\r\n    setAvgHumidity(60 + \"%\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.smallContainer}>\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={2}>\r\n          <img src={avgIcon} className={classes.avgIcon} />\r\n        </Grid>\r\n        <Grid item xs={1} className={classes.minMaxTemp}>\r\n          <p>{maxTemp}</p>\r\n          <p className={classes.minTemp}>{minTemp}</p>\r\n        </Grid>\r\n        <Grid item xs={3} className={classes.avgPressureHumidity}>\r\n          <p>Pressure:</p>\r\n          <p className={classes.avgPressureHumidityValue}>{avgPressure}</p>\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.avgPressureHumidity}>\r\n          <p>Humidity:</p>\r\n          <p className={classes.avgPressureHumidityValue}>{avgHumidity}</p>\r\n        </Grid>\r\n        <Grid item xs={3} className={classes.minMaxTemp}>\r\n          <p>Friday</p>\r\n          <p className={classes.dateUnderDay}>06 November</p>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n          <IconButton className={classes.expandButton}>\r\n            <ExpandMoreIcon className={classes.expandIcon} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayWindow;\r\n"]},"metadata":{},"sourceType":"module"}