{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\components\\\\clock.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport grey from \"@material-ui/core/colors/grey\";\nconst useStyles = makeStyles(theme => ({\n  clockStyle: {\n    background: grey[100],\n    width: 200,\n    height: 100,\n    paddingRight: 10,\n    paddingBottom: 5,\n    textAlign: \"right\"\n  },\n  upperHour: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  lowerDate: {\n    fontSize: 20\n  }\n}));\n\nfunction Clock(props) {\n  //const time = new Date();\n  const classes = useStyles();\n  const [time, setTime] = useState(null);\n\n  function fetchTime() {\n    let newTime = new Date();\n\n    if (newTime.getSeconds() < 10) {\n      newTime.setSeconds(\"0\" + newTime.getSeconds());\n    }\n\n    console.log(newTime.getSeconds());\n    setTime(new Date());\n  }\n\n  useEffect(() => {\n    fetchTime();\n    const interval = setInterval(() => {//console.log(\"jebać pis\");\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (time) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.clockStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.upperHour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, time.getHours(), \":\", time.getMinutes(), \":\", time.getSeconds()), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.lowerDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, time.getUTCMonth(), \" \", time.getDay(), \" \", time.getFullYear()));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n}\n\nexport default Clock;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/components/clock.jsx"],"names":["React","useState","useEffect","makeStyles","grey","useStyles","theme","clockStyle","background","width","height","paddingRight","paddingBottom","textAlign","upperHour","fontSize","fontWeight","lowerDate","Clock","props","classes","time","setTime","fetchTime","newTime","Date","getSeconds","setSeconds","console","log","interval","setInterval","clearInterval","getHours","getMinutes","getUTCMonth","getDay","getFullYear"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACrCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAEJ,IAAI,CAAC,GAAD,CADN;AAEVK,IAAAA,KAAK,EAAE,GAFG;AAGVC,IAAAA,MAAM,EAAE,GAHE;AAIVC,IAAAA,YAAY,EAAE,EAJJ;AAKVC,IAAAA,aAAa,EAAE,CALL;AAMVC,IAAAA,SAAS,EAAE;AAND,GADyB;AASrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE;AAFH,GAT0B;AAarCC,EAAAA,SAAS,EAAE;AACTF,IAAAA,QAAQ,EAAE;AADD;AAb0B,CAAL,CAAN,CAA5B;;AAkBA,SAASG,KAAT,CAAeC,KAAf,EAAsB;AACpB;AACA,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASsB,SAAT,GAAqB;AACnB,QAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;;AACA,QAAID,OAAO,CAACE,UAAR,KAAuB,EAA3B,EAA+B;AAC7BF,MAAAA,OAAO,CAACG,UAAR,CAAmB,MAAMH,OAAO,CAACE,UAAR,EAAzB;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACE,UAAR,EAAZ;AACAJ,IAAAA,OAAO,CAAC,IAAIG,IAAJ,EAAD,CAAP;AACD;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,SAAS;AACT,UAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM,CACjC;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAMC,aAAa,CAACF,QAAD,CAA1B;AACD,GANQ,EAMN,EANM,CAAT;;AAOA,MAAIT,IAAJ,EAAU;AACR,wBACE;AAAK,MAAA,SAAS,EAAED,OAAO,CAACb,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAEa,OAAO,CAACN,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,IAAI,CAACY,QAAL,EADH,OACqBZ,IAAI,CAACa,UAAL,EADrB,OACyCb,IAAI,CAACK,UAAL,EADzC,CADF,eAIE;AAAG,MAAA,SAAS,EAAEN,OAAO,CAACH,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,IAAI,CAACc,WAAL,EADH,OACwBd,IAAI,CAACe,MAAL,EADxB,OACwCf,IAAI,CAACgB,WAAL,EADxC,CAJF,CADF;AAUD,GAXD,MAWO;AACL,wBAAO,yCAAP;AACD;AACF;;AAED,eAAenB,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  clockStyle: {\r\n    background: grey[100],\r\n    width: 200,\r\n    height: 100,\r\n    paddingRight: 10,\r\n    paddingBottom: 5,\r\n    textAlign: \"right\",\r\n  },\r\n  upperHour: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n  },\r\n  lowerDate: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nfunction Clock(props) {\r\n  //const time = new Date();\r\n  const classes = useStyles();\r\n  const [time, setTime] = useState(null);\r\n\r\n  function fetchTime() {\r\n    let newTime = new Date();\r\n    if (newTime.getSeconds() < 10) {\r\n      newTime.setSeconds(\"0\" + newTime.getSeconds());\r\n    }\r\n    console.log(newTime.getSeconds());\r\n    setTime(new Date());\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchTime();\r\n    const interval = setInterval(() => {\r\n      //console.log(\"jebać pis\");\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  if (time) {\r\n    return (\r\n      <div className={classes.clockStyle}>\r\n        <p className={classes.upperHour}>\r\n          {time.getHours()}:{time.getMinutes()}:{time.getSeconds()}\r\n        </p>\r\n        <p className={classes.lowerDate}>\r\n          {time.getUTCMonth()} {time.getDay()} {time.getFullYear()}\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n"]},"metadata":{},"sourceType":"module"}