{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\pages\\\\about.jsx\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport logo from \"../assets/images/logo.png\";\nconst useStyles = makeStyles({\n  mainStyle: {\n    fontFamily: \"Open Sans\",\n    paddingBottom: 50\n  },\n  returnArrow: {\n    transform: \"rotate(180deg)\",\n    margin: 30,\n    fontSize: 60,\n    color: \"#C4C4C4\"\n  },\n  topGrid: {\n    marginTop: -60,\n    borderBottom: \"solid\",\n    borderBottomWidth: 1\n  },\n  logo: {\n    width: \"40%\",\n    float: \"right\",\n    marginRight: 50\n  },\n  mainText: {\n    marginLeft: 80,\n    marginRight: 100,\n    fontSize: 22\n  },\n  bottomBox: {\n    width: 470,\n    height: 300,\n    backgroundColor: \"#00031F\",\n    color: \"#F8F8F8\",\n    borderRadius: 10,\n    marginRight: 60,\n    marginLeft: 60,\n    marginTop: 30,\n    padding: 25\n  },\n  featuresText: {\n    textAlign: \"center\",\n    fontSize: 28,\n    fontWeight: 600\n  }\n});\n\nfunction About() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.mainStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    style: {\n      textDecoration: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PlayArrowIcon, {\n    className: classes.returnArrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.topGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.mainText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"MyWeather is a project of Krzysztof Moszczy\\u0144ski, Information Technology student at Technical University of Lodz. The purpose of this project is to create an interesting web application displaying weather data for specified city. The application uses OpenWeatherMap API as a source of data.\"))), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.featuresText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"The two features of this app are:\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Displaying a 5 days weather forecast for choosen city. The API gets one reading for 3-hours interval. The windows represent every 24 hours since the moment of the call. If the window is rolled up, the visible readings are an average of the 24-hour values, except the temperature. That\\u2019s the minimum and maximum. Once the user expands the window, they can see the specific readings and can switch between hours by clicking them. The clock displaed in the right top corner and also the hours in the weather forecast respect the searched city timezone.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default About;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/pages/about.jsx"],"names":["React","makeStyles","Link","Grid","PlayArrowIcon","logo","useStyles","mainStyle","fontFamily","paddingBottom","returnArrow","transform","margin","fontSize","color","topGrid","marginTop","borderBottom","borderBottomWidth","width","float","marginRight","mainText","marginLeft","bottomBox","height","backgroundColor","borderRadius","padding","featuresText","textAlign","fontWeight","About","classes","textDecoration"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nconst useStyles = makeStyles({\r\n  mainStyle: {\r\n    fontFamily: \"Open Sans\",\r\n    paddingBottom: 50,\r\n  },\r\n  returnArrow: {\r\n    transform: \"rotate(180deg)\",\r\n    margin: 30,\r\n    fontSize: 60,\r\n    color: \"#C4C4C4\",\r\n  },\r\n  topGrid: {\r\n    marginTop: -60,\r\n    borderBottom: \"solid\",\r\n    borderBottomWidth: 1,\r\n  },\r\n  logo: {\r\n    width: \"40%\",\r\n    float: \"right\",\r\n    marginRight: 50,\r\n  },\r\n  mainText: {\r\n    marginLeft: 80,\r\n    marginRight: 100,\r\n    fontSize: 22,\r\n  },\r\n  bottomBox: {\r\n    width: 470,\r\n    height: 300,\r\n    backgroundColor: \"#00031F\",\r\n    color: \"#F8F8F8\",\r\n    borderRadius: 10,\r\n    marginRight: 60,\r\n    marginLeft: 60,\r\n    marginTop: 30,\r\n    padding: 25,\r\n  },\r\n  featuresText: {\r\n    textAlign: \"center\",\r\n    fontSize: 28,\r\n    fontWeight: 600,\r\n  },\r\n});\r\n\r\nfunction About() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.mainStyle}>\r\n      <Link to='/' style={{ textDecoration: \"none\" }}>\r\n        <PlayArrowIcon className={classes.returnArrow} />\r\n      </Link>\r\n      <Grid container className={classes.topGrid}>\r\n        <Grid item xs={5}>\r\n          <img src={logo} className={classes.logo} />\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <p className={classes.mainText}>\r\n            MyWeather is a project of Krzysztof Moszczyński, Information\r\n            Technology student at Technical University of Lodz. The purpose of\r\n            this project is to create an interesting web application displaying\r\n            weather data for specified city. The application uses OpenWeatherMap\r\n            API as a source of data.\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n      <p className={classes.featuresText}>The two features of this app are:</p>\r\n      <Grid container justify='center'>\r\n        <Grid item>\r\n          <div className={classes.bottomBox}>\r\n            Displaying a 5 days weather forecast for choosen city. The API gets\r\n            one reading for 3-hours interval. The windows represent every 24\r\n            hours since the moment of the call. If the window is rolled up, the\r\n            visible readings are an average of the 24-hour values, except the\r\n            temperature. That’s the minimum and maximum. Once the user expands\r\n            the window, they can see the specific readings and can switch\r\n            between hours by clicking them. The clock displaed in the right top\r\n            corner and also the hours in the weather forecast respect the\r\n            searched city timezone.\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <div className={classes.bottomBox}></div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n"]},"metadata":{},"sourceType":"module"}