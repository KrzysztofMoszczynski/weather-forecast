{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\components\\\\day-window.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SunIcon from \"../assets/images/sun.png\";\nimport CloudIcon from \"../assets/images/cloud.png\";\nimport RainIcon from \"../assets/images/rain.png\";\nimport HailIcon from \"../assets/images/hail.png\";\nimport StormIcon from \"../assets/images/storm.png\";\nimport HeavyRainIcon from \"../assets/images/heavy-rain.png\";\nimport CloudsAndSunIcon from \"../assets/images/clouds-and-sun.png\";\nimport FogIcon from \"../assets/images/fog.png\";\nimport SnowIcon from \"../assets/images/snow.png\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Rotate90DegreesCcw } from \"@material-ui/icons\";\nconst useStyles = makeStyles({\n  container: {\n    backgroundColor: \"#273DFF\",\n    color: \"#EFEFEF\",\n    padding: 10,\n    margin: 20,\n    marginLeft: 100,\n    marginRight: 100,\n    borderRadius: 10,\n    \"& p\": {\n      margin: 1\n    }\n  },\n  leftTopContainer: {\n    marginTop: 100\n  },\n  avgIcon: {\n    width: 80,\n    height: 80\n  },\n  bigIcon: {\n    width: 150,\n    height: 150\n  },\n  minMaxTemp: {\n    textAlign: \"right\",\n    fontSize: 30\n  },\n  currentTemp: {\n    fontSize: 35,\n    textAlign: \"center\"\n  },\n  minTemp: {\n    opacity: \"50%\"\n  },\n  avgPressureHumidity: {\n    textAlign: \"center\",\n    fontSize: 23\n  },\n  avgPressureHumidityValue: {\n    fontSize: 28\n  },\n  dateUnderDay: {\n    fontSize: 20\n  },\n  expandButton: {\n    textAlign: \"center\",\n    marginTop: 22,\n    width: 40,\n    height: 40\n  },\n  expandIcon: {\n    fontSize: 30,\n    color: \"#C4C4C4\"\n  },\n  foldIcon: {\n    fontSize: 30,\n    color: \"#C4C4C4\",\n    transform: \"rotate(180deg)\"\n  }\n});\n\nfunction DayWindow() {\n  const classes = useStyles();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [avgIcon, setAvgIcon] = useState(null);\n  const [currentWeatherIcon, setcurrentWeatherIcon] = useState(null);\n  const [minTemp, setMinTemp] = useState(\"\");\n  const [maxTemp, setMaxTemp] = useState(\"\");\n  const [avgPressure, setAvgPressure] = useState(\"\");\n  const [avgHumidity, setAvgHumidity] = useState(\"\");\n\n  async function fetch() {\n    setAvgIcon(CloudIcon);\n    setcurrentWeatherIcon(SunIcon);\n    setMinTemp(3 + \"°\");\n    setMaxTemp(12 + \"°\");\n    setAvgPressure(1030 + \"hPa\");\n    setAvgHumidity(60 + \"%\");\n  }\n\n  function handleExpandButton() {\n    if (isExpanded) setIsExpanded(false);else setIsExpanded(true);\n    console.log(isExpanded);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  if (isExpanded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      className: classes.currentTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Now\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"12\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.avgPressureHumidityValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Sunny\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: currentWeatherIcon,\n      className: classes.bigIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 6,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"jeden\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \" \", \"dwa:\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"r\\xF3wna si\\u0119 ile\\u015B\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"trzy\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \" \", \"r\\xF3wna si\\u0119 ile\\u015B\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \"cztery\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"r\\xF3wna si\\u0119\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"co tam\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avgIcon,\n      className: classes.avgIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      className: classes.minMaxTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, maxTemp), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.minTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, minTemp)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      className: classes.avgPressureHumidity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Pressure:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.avgPressureHumidityValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, avgPressure)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      className: classes.avgPressureHumidity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"Humidity:\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.avgPressureHumidityValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, avgHumidity)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      className: classes.minMaxTemp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Friday\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.dateUnderDay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"06 November\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.expandButton,\n      onClick: handleExpandButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      className: classes.expandIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    })))));\n  }\n}\n\nexport default DayWindow;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/components/day-window.jsx"],"names":["React","useState","useEffect","Grid","IconButton","makeStyles","SunIcon","CloudIcon","RainIcon","HailIcon","StormIcon","HeavyRainIcon","CloudsAndSunIcon","FogIcon","SnowIcon","ExpandMoreIcon","Rotate90DegreesCcw","useStyles","container","backgroundColor","color","padding","margin","marginLeft","marginRight","borderRadius","leftTopContainer","marginTop","avgIcon","width","height","bigIcon","minMaxTemp","textAlign","fontSize","currentTemp","minTemp","opacity","avgPressureHumidity","avgPressureHumidityValue","dateUnderDay","expandButton","expandIcon","foldIcon","transform","DayWindow","classes","isExpanded","setIsExpanded","setAvgIcon","currentWeatherIcon","setcurrentWeatherIcon","setMinTemp","maxTemp","setMaxTemp","avgPressure","setAvgPressure","avgHumidity","setAvgHumidity","fetch","handleExpandButton","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAAC;AAC3Ba,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,OAAO,EAAE,EAHA;AAITC,IAAAA,MAAM,EAAE,EAJC;AAKTC,IAAAA,UAAU,EAAE,GALH;AAMTC,IAAAA,WAAW,EAAE,GANJ;AAOTC,IAAAA,YAAY,EAAE,EAPL;AAQT,WAAO;AACLH,MAAAA,MAAM,EAAE;AADH;AARE,GADgB;AAa3BI,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,SAAS,EAAE;AADK,GAbS;AAgB3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,EADA;AAEPC,IAAAA,MAAM,EAAE;AAFD,GAhBkB;AAoB3BC,EAAAA,OAAO,EAAE;AACPF,IAAAA,KAAK,EAAE,GADA;AAEPC,IAAAA,MAAM,EAAE;AAFD,GApBkB;AAwB3BE,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE,OADD;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GAxBe;AA4B3BC,EAAAA,WAAW,EAAE;AACXD,IAAAA,QAAQ,EAAE,EADC;AAEXD,IAAAA,SAAS,EAAE;AAFA,GA5Bc;AAgC3BG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAhCkB;AAmC3BC,EAAAA,mBAAmB,EAAE;AACnBL,IAAAA,SAAS,EAAE,QADQ;AAEnBC,IAAAA,QAAQ,EAAE;AAFS,GAnCM;AAuC3BK,EAAAA,wBAAwB,EAAE;AACxBL,IAAAA,QAAQ,EAAE;AADc,GAvCC;AA0C3BM,EAAAA,YAAY,EAAE;AACZN,IAAAA,QAAQ,EAAE;AADE,GA1Ca;AA6C3BO,EAAAA,YAAY,EAAE;AACZR,IAAAA,SAAS,EAAE,QADC;AAEZN,IAAAA,SAAS,EAAE,EAFC;AAGZE,IAAAA,KAAK,EAAE,EAHK;AAIZC,IAAAA,MAAM,EAAE;AAJI,GA7Ca;AAmD3BY,EAAAA,UAAU,EAAE;AACVR,IAAAA,QAAQ,EAAE,EADA;AAEVd,IAAAA,KAAK,EAAE;AAFG,GAnDe;AAuD3BuB,EAAAA,QAAQ,EAAE;AACRT,IAAAA,QAAQ,EAAE,EADF;AAERd,IAAAA,KAAK,EAAE,SAFC;AAGRwB,IAAAA,SAAS,EAAE;AAHH;AAvDiB,CAAD,CAA5B;;AA8DA,SAASC,SAAT,GAAqB;AACnB,QAAMC,OAAO,GAAG7B,SAAS,EAAzB;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/C,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC2B,OAAD,EAAUqB,UAAV,IAAwBhD,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACiD,kBAAD,EAAqBC,qBAArB,IAA8ClD,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAACmC,OAAD,EAAUgB,UAAV,IAAwBnD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoD,OAAD,EAAUC,UAAV,IAAwBrD,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsD,WAAD,EAAcC,cAAd,IAAgCvD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACwD,WAAD,EAAcC,cAAd,IAAgCzD,QAAQ,CAAC,EAAD,CAA9C;;AAEA,iBAAe0D,KAAf,GAAuB;AACrBV,IAAAA,UAAU,CAAC1C,SAAD,CAAV;AACA4C,IAAAA,qBAAqB,CAAC7C,OAAD,CAArB;AACA8C,IAAAA,UAAU,CAAC,IAAI,GAAL,CAAV;AACAE,IAAAA,UAAU,CAAC,KAAK,GAAN,CAAV;AACAE,IAAAA,cAAc,CAAC,OAAO,KAAR,CAAd;AACAE,IAAAA,cAAc,CAAC,KAAK,GAAN,CAAd;AACD;;AAED,WAASE,kBAAT,GAA8B;AAC5B,QAAIb,UAAJ,EAAgBC,aAAa,CAAC,KAAD,CAAb,CAAhB,KACKA,aAAa,CAAC,IAAD,CAAb;AACLa,IAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACD;;AAED7C,EAAAA,SAAS,CAAC,MAAM;AACdyD,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIZ,UAAJ,EAAgB;AACd,wBACE;AAAK,MAAA,SAAS,EAAED,OAAO,CAAC5B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAc,MAAA,SAAS,EAAE4B,OAAO,CAACX,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAG,MAAA,SAAS,EAAEW,OAAO,CAACP,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,eAME,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEW,kBAAV;AAA8B,MAAA,SAAS,EAAEJ,OAAO,CAACf,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF,eAWE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,EAAE,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,SADF,eAKE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALF,CAFF,eAWE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,gCAJF,CAXF,eAoBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,CApBF,CAXF,CADF,eA0CE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CF,CADF,CADF;AAkDD,GAnDD,MAmDO;AACL,wBACE;AAAK,MAAA,SAAS,EAAEe,OAAO,CAAC5B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEU,OAAV;AAAmB,MAAA,SAAS,EAAEkB,OAAO,CAAClB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,SAAS,EAAEkB,OAAO,CAACd,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIqB,OAAJ,CADF,eAEE;AAAG,MAAA,SAAS,EAAEP,OAAO,CAACV,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,OAAhC,CAFF,CAJF,eAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,SAAS,EAAEU,OAAO,CAACR,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAG,MAAA,SAAS,EAAEQ,OAAO,CAACP,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDgB,WAAjD,CAFF,CARF,eAYE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,SAAS,EAAET,OAAO,CAACR,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAG,MAAA,SAAS,EAAEQ,OAAO,CAACP,wBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDkB,WAAjD,CAFF,CAZF,eAgBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,SAAS,EAAEX,OAAO,CAACd,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,MAAA,SAAS,EAAEc,OAAO,CAACN,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CAhBF,eAoBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEM,OAAO,CAACL,YADrB;AAEE,MAAA,OAAO,EAAEmB,kBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAEd,OAAO,CAACJ,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CApBF,CADF,CADF;AAiCD;AACF;;AAED,eAAeG,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport SunIcon from \"../assets/images/sun.png\";\r\nimport CloudIcon from \"../assets/images/cloud.png\";\r\nimport RainIcon from \"../assets/images/rain.png\";\r\nimport HailIcon from \"../assets/images/hail.png\";\r\nimport StormIcon from \"../assets/images/storm.png\";\r\nimport HeavyRainIcon from \"../assets/images/heavy-rain.png\";\r\nimport CloudsAndSunIcon from \"../assets/images/clouds-and-sun.png\";\r\nimport FogIcon from \"../assets/images/fog.png\";\r\nimport SnowIcon from \"../assets/images/snow.png\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Rotate90DegreesCcw } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    backgroundColor: \"#273DFF\",\r\n    color: \"#EFEFEF\",\r\n    padding: 10,\r\n    margin: 20,\r\n    marginLeft: 100,\r\n    marginRight: 100,\r\n    borderRadius: 10,\r\n    \"& p\": {\r\n      margin: 1,\r\n    },\r\n  },\r\n  leftTopContainer: {\r\n    marginTop: 100,\r\n  },\r\n  avgIcon: {\r\n    width: 80,\r\n    height: 80,\r\n  },\r\n  bigIcon: {\r\n    width: 150,\r\n    height: 150,\r\n  },\r\n  minMaxTemp: {\r\n    textAlign: \"right\",\r\n    fontSize: 30,\r\n  },\r\n  currentTemp: {\r\n    fontSize: 35,\r\n    textAlign: \"center\",\r\n  },\r\n  minTemp: {\r\n    opacity: \"50%\",\r\n  },\r\n  avgPressureHumidity: {\r\n    textAlign: \"center\",\r\n    fontSize: 23,\r\n  },\r\n  avgPressureHumidityValue: {\r\n    fontSize: 28,\r\n  },\r\n  dateUnderDay: {\r\n    fontSize: 20,\r\n  },\r\n  expandButton: {\r\n    textAlign: \"center\",\r\n    marginTop: 22,\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  expandIcon: {\r\n    fontSize: 30,\r\n    color: \"#C4C4C4\",\r\n  },\r\n  foldIcon: {\r\n    fontSize: 30,\r\n    color: \"#C4C4C4\",\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n});\r\n\r\nfunction DayWindow() {\r\n  const classes = useStyles();\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [avgIcon, setAvgIcon] = useState(null);\r\n  const [currentWeatherIcon, setcurrentWeatherIcon] = useState(null);\r\n  const [minTemp, setMinTemp] = useState(\"\");\r\n  const [maxTemp, setMaxTemp] = useState(\"\");\r\n  const [avgPressure, setAvgPressure] = useState(\"\");\r\n  const [avgHumidity, setAvgHumidity] = useState(\"\");\r\n\r\n  async function fetch() {\r\n    setAvgIcon(CloudIcon);\r\n    setcurrentWeatherIcon(SunIcon);\r\n    setMinTemp(3 + \"°\");\r\n    setMaxTemp(12 + \"°\");\r\n    setAvgPressure(1030 + \"hPa\");\r\n    setAvgHumidity(60 + \"%\");\r\n  }\r\n\r\n  function handleExpandButton() {\r\n    if (isExpanded) setIsExpanded(false);\r\n    else setIsExpanded(true);\r\n    console.log(isExpanded);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch();\r\n  }, []);\r\n\r\n  if (isExpanded) {\r\n    return (\r\n      <div className={classes.container}>\r\n        <Grid container direction='column'>\r\n          <Grid item container>\r\n            <Grid item container xs={6}>\r\n              <Grid item xs className={classes.currentTemp}>\r\n                <p>Now</p>\r\n                <p>12°</p>\r\n                <p className={classes.avgPressureHumidityValue}>Sunny</p>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <img src={currentWeatherIcon} className={classes.bigIcon} />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item container xs={6} direction='column'>\r\n              <Grid item>jeden</Grid>\r\n              <Grid item container>\r\n                <Grid item xs>\r\n                  {\" \"}\r\n                  dwa:\r\n                </Grid>\r\n                <Grid item xs>\r\n                  równa się ileś\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container>\r\n                <Grid item xs>\r\n                  trzy\r\n                </Grid>\r\n                <Grid item xs>\r\n                  {\" \"}\r\n                  równa się ileś\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item container>\r\n                <Grid item xs>\r\n                  cztery\r\n                </Grid>\r\n                <Grid item xs>\r\n                  równa się\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item container>\r\n            co tam\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={classes.container}>\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={2}>\r\n            <img src={avgIcon} className={classes.avgIcon} />\r\n          </Grid>\r\n          <Grid item xs={1} className={classes.minMaxTemp}>\r\n            <p>{maxTemp}</p>\r\n            <p className={classes.minTemp}>{minTemp}</p>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.avgPressureHumidity}>\r\n            <p>Pressure:</p>\r\n            <p className={classes.avgPressureHumidityValue}>{avgPressure}</p>\r\n          </Grid>\r\n          <Grid item xs={2} className={classes.avgPressureHumidity}>\r\n            <p>Humidity:</p>\r\n            <p className={classes.avgPressureHumidityValue}>{avgHumidity}</p>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.minMaxTemp}>\r\n            <p>Friday</p>\r\n            <p className={classes.dateUnderDay}>06 November</p>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <IconButton\r\n              className={classes.expandButton}\r\n              onClick={handleExpandButton}\r\n            >\r\n              <ExpandMoreIcon className={classes.expandIcon} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DayWindow;\r\n"]},"metadata":{},"sourceType":"module"}