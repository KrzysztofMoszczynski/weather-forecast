{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\components\\\\clock.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport grey from \"@material-ui/core/colors/grey\";\nconst useStyles = makeStyles(theme => ({\n  clockStyle: {\n    background: grey[100],\n    width: 200,\n    height: 100,\n    paddingRight: 10,\n    paddingBottom: 5,\n    textAlign: \"right\"\n  },\n  upperHour: {\n    fontSize: 30,\n    fontWeight: \"bold\"\n  },\n  lowerDate: {\n    fontSize: 20\n  }\n}));\n\nfunction Clock({\n  timezone\n}) {\n  //const time = new Date();\n  const classes = useStyles();\n  const [time, setTime] = useState(null);\n  const [seconds, setSeconds] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [hours, setHours] = useState(0);\n\n  function fetchTime() {\n    let newTime = new Date();\n    /* + timezone*/\n\n    console.log(newTime.getTimezoneOffset()); //newTime.setUTCHours();\n\n    if (newTime.getSeconds() < 10) {\n      setSeconds(\"0\" + newTime.getSeconds());\n    } else {\n      setSeconds(newTime.getSeconds());\n    }\n\n    if (newTime.getMinutes() < 10) {\n      setMinutes(\"0\" + newTime.getMinutes());\n    } else {\n      setMinutes(newTime.getMinutes());\n    }\n\n    if (newTime.getHours() < 10) {\n      setHours(\"0\" + newTime.getHours());\n    } else {\n      setHours(newTime.getHours());\n    }\n\n    setTime(newTime);\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchTime();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (time) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.clockStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.upperHour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, hours, \":\", minutes, \":\", seconds), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.lowerDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, time.toDateString()));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.clockStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.upperHour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n}\n\nexport default Clock;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/components/clock.jsx"],"names":["React","useState","useEffect","makeStyles","grey","useStyles","theme","clockStyle","background","width","height","paddingRight","paddingBottom","textAlign","upperHour","fontSize","fontWeight","lowerDate","Clock","timezone","classes","time","setTime","seconds","setSeconds","minutes","setMinutes","hours","setHours","fetchTime","newTime","Date","console","log","getTimezoneOffset","getSeconds","getMinutes","getHours","interval","setInterval","clearInterval","toDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  clockStyle: {\r\n    background: grey[100],\r\n    width: 200,\r\n    height: 100,\r\n    paddingRight: 10,\r\n    paddingBottom: 5,\r\n    textAlign: \"right\",\r\n  },\r\n  upperHour: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n  },\r\n  lowerDate: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nfunction Clock({ timezone }) {\r\n  //const time = new Date();\r\n  const classes = useStyles();\r\n  const [time, setTime] = useState(null);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [hours, setHours] = useState(0);\r\n\r\n  function fetchTime() {\r\n    let newTime = new Date(); /* + timezone*/\r\n    console.log(newTime.getTimezoneOffset());\r\n    //newTime.setUTCHours();\r\n    if (newTime.getSeconds() < 10) {\r\n      setSeconds(\"0\" + newTime.getSeconds());\r\n    } else {\r\n      setSeconds(newTime.getSeconds());\r\n    }\r\n    if (newTime.getMinutes() < 10) {\r\n      setMinutes(\"0\" + newTime.getMinutes());\r\n    } else {\r\n      setMinutes(newTime.getMinutes());\r\n    }\r\n    if (newTime.getHours() < 10) {\r\n      setHours(\"0\" + newTime.getHours());\r\n    } else {\r\n      setHours(newTime.getHours());\r\n    }\r\n    setTime(newTime);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      fetchTime();\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (time) {\r\n    return (\r\n      <div className={classes.clockStyle}>\r\n        <p className={classes.upperHour}>\r\n          {hours}:{minutes}:{seconds}\r\n        </p>\r\n        <p className={classes.lowerDate}>{time.toDateString()}</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={classes.clockStyle}>\r\n        <p className={classes.upperHour}>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n"]},"metadata":{},"sourceType":"module"}