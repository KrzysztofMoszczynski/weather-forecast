{"ast":null,"code":"import axios from \"axios\";\nconst apiKey = \"f14f6a8afb9f48fa4104b86989623adf\";\nconst database = {\n  async getWeatherByCityName(city) {\n    const createWeatherList = (date, hour, temperature, icon, pressure, humidity, wind) => ({\n      date,\n      hour,\n      temperature,\n      icon,\n      pressure,\n      humidity,\n      wind\n    });\n\n    const cityData = (cityName, countryCode) => ({\n      cityName,\n      countryCode\n    });\n\n    const weatherList = [];\n    /*var url =\r\n      \"api.openweathermap.org/data/2.5/forecast?q={\" +\r\n      city +\r\n      \"}&appid={\" +\r\n      apiKey +\r\n      \"}\";\r\n    const response = await axios.get(url);*/\n\n    try {\n      const response = await axios.get(\"https://api.openweathermap.org/data/2.5/forecast\", {\n        params: {\n          q: city,\n          appid: apiKey\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.log(error);\n    } //const weatherArray = await api.openweathermap.org/data/2.5/forecast?q={Warsaw}&appid={apiKey};\n\n  }\n\n};\nexport default database;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/api/openWeatherMap.js"],"names":["axios","apiKey","database","getWeatherByCityName","city","createWeatherList","date","hour","temperature","icon","pressure","humidity","wind","cityData","cityName","countryCode","weatherList","response","get","params","q","appid","console","log","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AAEA,MAAMC,QAAQ,GAAG;AACf,QAAMC,oBAAN,CAA2BC,IAA3B,EAAiC;AAC/B,UAAMC,iBAAiB,GAAG,CACxBC,IADwB,EAExBC,IAFwB,EAGxBC,WAHwB,EAIxBC,IAJwB,EAKxBC,QALwB,EAMxBC,QANwB,EAOxBC,IAPwB,MAQpB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,WAAd;AAA2BC,MAAAA,IAA3B;AAAiCC,MAAAA,QAAjC;AAA2CC,MAAAA,QAA3C;AAAqDC,MAAAA;AAArD,KARoB,CAA1B;;AAUA,UAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,WAAX,MAA4B;AAAED,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA5B,CAAjB;;AAEA,UAAMC,WAAW,GAAG,EAApB;AACA;;;;;;;;AAOA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACrB,kDADqB,EAErB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,CAAC,EAAEhB,IAAL;AAAWiB,UAAAA,KAAK,EAAEpB;AAAlB;AAAV,OAFqB,CAAvB;AAIAqB,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,IAArB;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KA7B8B,CA8B/B;;AACD;;AAhCc,CAAjB;AAmCA,eAAevB,QAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiKey = \"f14f6a8afb9f48fa4104b86989623adf\";\r\n\r\nconst database = {\r\n  async getWeatherByCityName(city) {\r\n    const createWeatherList = (\r\n      date,\r\n      hour,\r\n      temperature,\r\n      icon,\r\n      pressure,\r\n      humidity,\r\n      wind\r\n    ) => ({ date, hour, temperature, icon, pressure, humidity, wind });\r\n\r\n    const cityData = (cityName, countryCode) => ({ cityName, countryCode });\r\n\r\n    const weatherList = [];\r\n    /*var url =\r\n      \"api.openweathermap.org/data/2.5/forecast?q={\" +\r\n      city +\r\n      \"}&appid={\" +\r\n      apiKey +\r\n      \"}\";\r\n    const response = await axios.get(url);*/\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.openweathermap.org/data/2.5/forecast\",\r\n        { params: { q: city, appid: apiKey } }\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    //const weatherArray = await api.openweathermap.org/data/2.5/forecast?q={Warsaw}&appid={apiKey};\r\n  },\r\n};\r\n\r\nexport default database;\r\n"]},"metadata":{},"sourceType":"module"}