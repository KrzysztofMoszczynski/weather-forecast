{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\nimport MainWeather from \"./pages/mainweather\";\nimport database from \"../api/openWeatherMap\";\n\nfunction App() {\n  const [cityName, setCityName] = useState(\"\");\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [cityData, setCityData] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityNotFound, setCityNotFound] = useState(false);\n\n  async function fetchWeather(choosenCityName) {\n    const weather = await database.getWeatherByCityName(choosenCityName);\n\n    if (weather == false) {\n      setCityNotFound(true);\n    } else {\n      setCityData(weather[0]);\n      setWeatherData(weather[1]);\n      setCityNotFound(false);\n    }\n\n    setDataLoaded(true);\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/mainweather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MainWeather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n      setCityName: setCityName,\n      cityNotFound: cityNotFound,\n      fetchWeather: fetchWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Home","MainWeather","database","App","cityName","setCityName","dataLoaded","setDataLoaded","cityData","setCityData","weatherData","setWeatherData","cityNotFound","setCityNotFound","fetchWeather","choosenCityName","weather","getWeatherByCityName","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,iBAAeoB,YAAf,CAA4BC,eAA5B,EAA6C;AAC3C,UAAMC,OAAO,GAAG,MAAMd,QAAQ,CAACe,oBAAT,CAA8BF,eAA9B,CAAtB;;AACA,QAAIC,OAAO,IAAI,KAAf,EAAsB;AACpBH,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACO,OAAO,CAAC,CAAD,CAAR,CAAX;AACAL,MAAAA,cAAc,CAACK,OAAO,CAAC,CAAD,CAAR,CAAd;AACAH,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AACDN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,MAAM,EAAEW,KAAK,iBACX,oBAAC,IAAD,oBACMA,KADN;AAEE,MAAA,WAAW,EAAEb,WAFf;AAGE,MAAA,YAAY,EAAEO,YAHhB;AAIE,MAAA,YAAY,EAAEE,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF;AAuBD;;AAED,eAAeX,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\nimport MainWeather from \"./pages/mainweather\";\nimport database from \"../api/openWeatherMap\";\n\nfunction App() {\n  const [cityName, setCityName] = useState(\"\");\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [cityData, setCityData] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityNotFound, setCityNotFound] = useState(false);\n\n  async function fetchWeather(choosenCityName) {\n    const weather = await database.getWeatherByCityName(choosenCityName);\n    if (weather == false) {\n      setCityNotFound(true);\n    } else {\n      setCityData(weather[0]);\n      setWeatherData(weather[1]);\n      setCityNotFound(false);\n    }\n    setDataLoaded(true);\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path='/mainweather'>\n            <MainWeather />\n          </Route>\n          <Route\n            exact\n            path='/'\n            render={props => (\n              <Home\n                {...props}\n                setCityName={setCityName}\n                cityNotFound={cityNotFound}\n                fetchWeather={fetchWeather}\n              />\n            )}\n          ></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}