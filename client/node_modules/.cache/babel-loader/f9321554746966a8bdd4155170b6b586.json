{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Krzysztof\\\\Documents\\\\GitHub\\\\weather-forecast\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, useHistory } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\nimport MainWeather from \"./pages/mainweather\";\nimport database from \"./api/openWeatherMap\";\n\nfunction App() {\n  let history = useHistory();\n  let testVariable = null;\n  const [cityName, setCityName] = useState(\"\");\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [cityData, setCityData] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityNotFound, setCityNotFound] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n\n  async function fetchWeather(choosenCityName) {\n    const weather = await database.getWeatherByCityName(choosenCityName);\n\n    if (weather == false) {\n      setCityNotFound(true);\n    } else {\n      setCityData(weather[0]);\n      setWeatherData(weather[1]);\n      setCityNotFound(false);\n      setRedirect(\"/mainweather\");\n    } //setDataLoaded(true);\n\n  }\n\n  useEffect(() => {\n    console.log(testVariable);\n\n    if (redirect) {//history.push(redirect);\n    }\n  }, [redirect]);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/mainweather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MainWeather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n      setCityName: setCityName,\n      cityNotFound: cityNotFound,\n      fetchWeather: fetchWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Krzysztof/Documents/GitHub/weather-forecast/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","useHistory","Home","MainWeather","database","App","history","testVariable","cityName","setCityName","dataLoaded","setDataLoaded","cityData","setCityData","weatherData","setWeatherData","cityNotFound","setCityNotFound","redirect","setRedirect","fetchWeather","choosenCityName","weather","getWeatherByCityName","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,UAJF,QAKO,kBALP;AAMA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,SAASC,GAAT,GAAe;AACb,MAAIC,OAAO,GAAGL,UAAU,EAAxB;AACA,MAAIM,YAAY,GAAG,IAAnB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,iBAAeyB,YAAf,CAA4BC,eAA5B,EAA6C;AAC3C,UAAMC,OAAO,GAAG,MAAMlB,QAAQ,CAACmB,oBAAT,CAA8BF,eAA9B,CAAtB;;AACA,QAAIC,OAAO,IAAI,KAAf,EAAsB;AACpBL,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACLJ,MAAAA,WAAW,CAACS,OAAO,CAAC,CAAD,CAAR,CAAX;AACAP,MAAAA,cAAc,CAACO,OAAO,CAAC,CAAD,CAAR,CAAd;AACAL,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,MAAAA,WAAW,CAAC,cAAD,CAAX;AACD,KAT0C,CAU3C;;AACD;;AAEDvB,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAZ;;AACA,QAAIW,QAAJ,EAAc,CACZ;AACD;AACF,GALQ,EAKN,CAACA,QAAD,CALM,CAAT;AAOA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,MAAM,EAAEQ,KAAK,iBACX,oBAAC,IAAD,oBACMA,KADN;AAEE,MAAA,WAAW,EAAEjB,WAFf;AAGE,MAAA,YAAY,EAAEO,YAHhB;AAIE,MAAA,YAAY,EAAEI,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF;AAuBD;;AAED,eAAef,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/home\";\nimport MainWeather from \"./pages/mainweather\";\nimport database from \"./api/openWeatherMap\";\n\nfunction App() {\n  let history = useHistory();\n  let testVariable = null;\n  const [cityName, setCityName] = useState(\"\");\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [cityData, setCityData] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityNotFound, setCityNotFound] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n\n  async function fetchWeather(choosenCityName) {\n    const weather = await database.getWeatherByCityName(choosenCityName);\n    if (weather == false) {\n      setCityNotFound(true);\n    } else {\n      setCityData(weather[0]);\n      setWeatherData(weather[1]);\n      setCityNotFound(false);\n      setRedirect(\"/mainweather\");\n    }\n    //setDataLoaded(true);\n  }\n\n  useEffect(() => {\n    console.log(testVariable);\n    if (redirect) {\n      //history.push(redirect);\n    }\n  }, [redirect]);\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path='/mainweather'>\n            <MainWeather />\n          </Route>\n          <Route\n            exact\n            path='/'\n            render={props => (\n              <Home\n                {...props}\n                setCityName={setCityName}\n                cityNotFound={cityNotFound}\n                fetchWeather={fetchWeather}\n              />\n            )}\n          ></Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}